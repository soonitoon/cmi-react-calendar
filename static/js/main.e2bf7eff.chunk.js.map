{"version":3,"sources":["actions/index.ts","reducer/dateReducer.ts","reducer/index.ts","global-styles.ts","components/Controller/styles.ts","components/Controller/Controller.tsx","components/WeekBar/styles.ts","components/WeekBar/WeekBar.tsx","modules/getDateObj.ts","components/DateFactory/styles.ts","components/DateFactory/DateFactory.tsx","components/DateTemplate/styles.ts","components/DateTemplate/DateTemplate.tsx","components/CalendarHeader/Header.styles.ts","components/CalendarHeader/CalendarHeader.tsx","components/CalendarFooter/CalendarFooter.styles.ts","components/CalendarFooter/CalendarFooter.tsx","App.tsx","index.tsx"],"names":["INCREMENT_YEAR","DECREMENT_YEAR","INCREMENT_MONTH","DECREMENT_MONTH","date","Date","defaultDate","year","getFullYear","month","getMonth","getDate","rootReducer","combineReducers","state","action","type","reduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","CSSVariables","GlobalStyle","createGlobalStyle","reset","BtnContainer","styled","div","props","marginBottom","Display","h2","fontSize","Button","button","Controller","useSelector","dispatch","useDispatch","yearStyleValues","monthStyleValues","onClick","Week","ul","WeekBar","map","day","getDay","dateState","getLastDateOfMonth","getLastMonthList","dateList","lastMonth","lastMonthContext","lastDate","firstDayContext","i","unshift","getNextMonthList","lastDay","push","getCurrentMonthList","getDateObj","realDate","today","dateLists","DateLi","li","isgray","DateFactory","isGray","eachDate","index","DateUl","DateTemplate","Header","header","CalendarHeader","Footer","footer","CalendarFooter","footerText","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2bf7eff.chunk.js","sourcesContent":["export const INCREMENT_YEAR: string = 'CALENDAR/INCREMENT_YEAR';\nexport const DECREMENT_YEAR: string = 'CALENDAR/DECREMENT_YEAR';\nexport const INCREMENT_MONTH: string = 'CALENDAR/INCREMENT_MONTH';\nexport const DECREMENT_MONTH: string = 'CALENDAR/DECREMENT_MONTH';\n\ninterface ActionConfig {\n  type: string;\n}\n\nexport const incrementYear = (): ActionConfig => {\n  return { type: INCREMENT_YEAR };\n};\n\nexport const decrementYear = (): ActionConfig => {\n  return { type: DECREMENT_YEAR };\n};\n\nexport const incrementMonth = (): ActionConfig => {\n  return { type: INCREMENT_MONTH };\n};\n\nexport const decrementMonth = (): ActionConfig => {\n  return { type: DECREMENT_MONTH };\n};\n","import {\n  DECREMENT_MONTH,\n  DECREMENT_YEAR,\n  INCREMENT_MONTH,\n  INCREMENT_YEAR,\n} from '../actions';\n\nconst date: Date = new Date();\n\nexport interface DefaultDateConfig {\n  year: number;\n  month: number;\n  date: number;\n}\n\nconst defaultDate: DefaultDateConfig = {\n  year: date.getFullYear(),\n  month: date.getMonth(),\n  date: date.getDate(),\n};\n\ntype DateReducerConfig = (\n  state: DefaultDateConfig,\n  action: { type: string },\n) => DefaultDateConfig;\n\nexport const dateReducer: DateReducerConfig = (state = defaultDate, action) => {\n  switch (action.type) {\n    case INCREMENT_YEAR:\n      return {\n        ...state,\n        year: state.year + 1,\n      };\n\n    case DECREMENT_YEAR:\n      return {\n        ...state,\n        year: state.year === 0 ? 0 : state.year - 1,\n      };\n\n    case INCREMENT_MONTH:\n      if (state.month === 11) {\n        return {\n          ...state,\n          month: 0,\n          year: state.year + 1,\n        };\n      }\n      return {\n        ...state,\n        month: state.month + 1,\n      };\n\n    case DECREMENT_MONTH:\n      if (state.month === 0) {\n        return {\n          ...state,\n          month: 11,\n          year: state.year === 0 ? 0 : state.year - 1,\n        };\n      }\n      return {\n        ...state,\n        month: state.month - 1,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers, createStore } from 'redux';\nimport { dateReducer } from './dateReducer';\n\nconst rootReducer = combineReducers({\n  date: dateReducer,\n});\n\nconst reduxDevTools =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__();\n\nconst store = createStore(rootReducer, reduxDevTools);\n\nexport default store;\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\ninterface ICSSVariables {\n  mainFontFamily: string;\n  titleFontFamily: string;\n  mainBackgroundColor: string;\n  mainFontColor: string;\n  pointSkyblueColor: string;\n  sundayRedColor: string;\n  notCurrentDateColor: string;\n}\n\nexport const CSSVariables: ICSSVariables = {\n  mainFontFamily: '\"Roboto\", sans-serif',\n  titleFontFamily: '\"Dancing Script\", cursive',\n  mainBackgroundColor: '#0f111b',\n  mainFontColor: 'white',\n  pointSkyblueColor: '#09cefc',\n  sundayRedColor: '#ee3b50',\n  notCurrentDateColor: 'grey',\n};\n\nexport const GlobalStyle = createGlobalStyle`\n  ${reset}\n\n  #root {\n    font-family: ${CSSVariables.mainFontFamily};\n    font-size: 25px;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color: ${CSSVariables.mainBackgroundColor};\n    color: ${CSSVariables.mainFontColor};\n  }\n\n  li:nth-child(7n + 1) {\n    color: ${CSSVariables.sundayRedColor};\n  }\n`;\n","import styled from 'styled-components';\nimport { CSSVariables } from '../../global-styles';\n\ninterface BtnContainerConfig {\n  marginBottom: number;\n}\n\nexport const BtnContainer = styled.div<BtnContainerConfig>`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: ${(props) => props.marginBottom}px;\n`;\n\ninterface DisplayConfig {\n  fontSize: number;\n}\n\nexport const Display = styled.h2<DisplayConfig>`\n  font-size: ${(props) => props.fontSize}px;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  border-radius: 10px;\n  background-color: transparent;\n  font-size: 30px;\n  color: ${CSSVariables.pointSkyblueColor};\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DefaultDateConfig } from '../../reducer/dateReducer';\nimport { BtnContainer, Button, Display } from './styles';\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\nimport {\n  decrementMonth,\n  decrementYear,\n  incrementMonth,\n  incrementYear,\n} from '../../actions';\n\nconst Controller = (): React.ReactElement => {\n  const date = useSelector((state: { date: DefaultDateConfig }) => state.date);\n  const dispatch = useDispatch();\n\n  const yearStyleValues = {\n    marginBottom: 0,\n    fontSize: 50,\n  };\n\n  const monthStyleValues = {\n    marginBottom: 20,\n    fontSize: 40,\n  };\n\n  return (\n    <>\n      <BtnContainer marginBottom={yearStyleValues.marginBottom}>\n        <Button\n          onClick={() => {\n            dispatch(decrementYear());\n          }}\n        >\n          <FiChevronLeft />\n        </Button>\n        <Display fontSize={yearStyleValues.fontSize}>{date.year}</Display>\n        <Button\n          onClick={() => {\n            dispatch(incrementYear());\n          }}\n        >\n          <FiChevronRight />\n        </Button>\n      </BtnContainer>\n      <BtnContainer marginBottom={monthStyleValues.marginBottom}>\n        <Button\n          onClick={() => {\n            dispatch(decrementMonth());\n          }}\n        >\n          <FiChevronLeft />\n        </Button>\n        <Display fontSize={monthStyleValues.fontSize}>{date.month + 1}</Display>\n        <Button\n          onClick={() => {\n            dispatch(incrementMonth());\n          }}\n        >\n          <FiChevronRight />\n        </Button>\n      </BtnContainer>\n    </>\n  );\n};\n\nexport default Controller;\n","import styled from 'styled-components';\nimport { CSSVariables } from '../../global-styles';\n\nconst Week = styled.ul`\n  margin-bottom: 30px;\n  color: ${CSSVariables.pointSkyblueColor};\n  display: grid;\n  grid-template-columns: repeat(7, minmax(90px, auto));\n  text-align: center;\n`;\n\nexport default Week;\n","import React, { ReactElement } from 'react';\nimport Week from './styles';\n\nconst WeekBar = (): ReactElement => {\n  const days: string[] = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  return (\n    <Week>\n      {days.map(\n        (day: string): React.ReactElement => (\n          <li key={day}>{day}</li>\n        ),\n      )}\n    </Week>\n  );\n};\n\nexport default WeekBar;\n","import { DefaultDateConfig } from '../reducer/dateReducer';\r\n\r\nconst getDay = (dateState: DefaultDateConfig): number => {\r\n  const { year, month, date }: DefaultDateConfig = dateState;\r\n  return new Date(year, month, date).getDay();\r\n};\r\n\r\nconst getLastDateOfMonth = (dateState: DefaultDateConfig): number => {\r\n  const { year, month } = dateState;\r\n\r\n  return new Date(year, month + 1, 0).getDate(); // return last date of last month.\r\n};\r\n\r\nconst getLastMonthList: Function = (dateState: DefaultDateConfig): number[] => {\r\n  const month: number = dateState.month;\r\n  const lastMonth: number = month === 0 ? 11 : month - 1;\r\n\r\n  const lastMonthContext: DefaultDateConfig = {\r\n    ...dateState,\r\n    month: lastMonth,\r\n  };\r\n\r\n  const lastDate: number = getLastDateOfMonth(lastMonthContext);\r\n  let dateList: number[];\r\n  dateList = [];\r\n\r\n  const firstDayContext: DefaultDateConfig = {\r\n    ...dateState,\r\n    date: 1,\r\n  };\r\n\r\n  for (let i: number = 0; i < getDay(firstDayContext); i++) {\r\n    dateList.unshift(lastDate - i);\r\n  }\r\n\r\n  return dateList;\r\n};\r\n\r\nconst getNextMonthList = (dateState: DefaultDateConfig): number[] => {\r\n  const lastDate: number = getLastDateOfMonth(dateState);\r\n  dateState = {\r\n    ...dateState,\r\n    date: lastDate,\r\n  };\r\n\r\n  const lastDay: number = getDay(dateState);\r\n  let dateList: number[];\r\n  dateList = [];\r\n\r\n  for (let i: number = 1; i <= 6 - lastDay; i++) {\r\n    dateList.push(i);\r\n  }\r\n\r\n  return dateList;\r\n};\r\n\r\nconst getCurrentMonthList = (dateState: DefaultDateConfig): number[] => {\r\n  let dateList: number[];\r\n  dateList = [];\r\n\r\n  for (let i: number = 1; i <= getLastDateOfMonth(dateState); i++) {\r\n    dateList.push(i);\r\n  }\r\n\r\n  return dateList;\r\n};\r\n\r\nconst getDateObj: Function = (dateState: DefaultDateConfig) => {\r\n  const realDate: Date = new Date();\r\n  let today: number = -1;\r\n\r\n  if (\r\n    dateState.year === realDate.getFullYear() &&\r\n    dateState.month === realDate.getMonth()\r\n  ) {\r\n    today = dateState.date;\r\n  }\r\n\r\n  const dateLists: number[][] = [\r\n    getLastMonthList(dateState),\r\n    getCurrentMonthList(dateState),\r\n    getNextMonthList(dateState),\r\n  ];\r\n\r\n  return {\r\n    today,\r\n    dateLists,\r\n  };\r\n};\r\n\r\nexport default getDateObj;\r\n","import styled from 'styled-components';\n\ninterface DateLiConfig {\n  today: string;\n  isgray: string;\n}\n\nconst DateLi = styled.li<DateLiConfig>`\n  color: ${(props) => props.today} !important;\n  color: ${(props) => props.isgray} !important;\n`;\n\nexport default DateLi;\n","import React, { ReactElement } from 'react';\nimport { CSSVariables } from '../../global-styles';\nimport DateLi from './styles';\n\ninterface DateFactoryProps {\n  dateList: number[];\n  today: number;\n  isGray: boolean;\n}\n\nconst DateFactory = ({\n  dateList,\n  today,\n  isGray,\n}: DateFactoryProps): ReactElement => {\n  return (\n    <>\n      {dateList.map(\n        (eachDate: number, index: number): React.ReactElement => (\n          <DateLi\n            key={index}\n            today={eachDate === today ? CSSVariables.pointSkyblueColor : ''}\n            isgray={isGray ? CSSVariables.notCurrentDateColor : ''}\n          >\n            {eachDate}\n          </DateLi>\n        ),\n      )}\n    </>\n  );\n};\n\nexport default DateFactory;\n","import styled from 'styled-components';\n\nconst DateUl = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(7, minmax(90px, auto));\n  grid-template-rows: repeat(6, minmax(60px, auto));\n  text-align: center;\n`;\n\nexport default DateUl;\n","import React, { ReactElement } from 'react';\nimport { useSelector } from 'react-redux';\nimport getDateObj from '../../modules/getDateObj';\nimport { DefaultDateConfig } from '../../reducer/dateReducer';\nimport DateFactory from '../DateFactory/DateFactory';\nimport DateUl from './styles';\n\nconst DateTemplate = (): ReactElement => {\n  const date = useSelector((store: { date: DefaultDateConfig }) => store.date);\n\n  interface DateObjConfig {\n    today: number;\n    dateLists: number[][];\n  }\n\n  const { today, dateLists }: DateObjConfig = getDateObj(date);\n\n  return (\n    <DateUl>\n      {dateLists.map(\n        (dateList: number[], index: number): React.ReactElement => (\n          <DateFactory\n            key={index}\n            dateList={dateList}\n            today={today}\n            isGray={index !== 1 ? true : false} // 0, 2 => last, next month. 1 = > current month.\n          />\n        ),\n      )}\n    </DateUl>\n  );\n};\n\nexport default DateTemplate;\n","import styled from 'styled-components';\nimport { CSSVariables } from '../../global-styles';\n\nexport const Header = styled.header`\n  font-family: ${CSSVariables.titleFontFamily};\n  font-size: 70px;\n  margin-bottom: 40px;\n`;\n","import React from 'react';\nimport { Header } from './Header.styles';\n\nconst CalendarHeader = (): React.ReactElement => {\n  const headerText: string = 'Simple Calendar';\n\n  return <Header>{headerText}</Header>;\n};\n\nexport default CalendarHeader;\n","import styled from 'styled-components';\n\nexport const Footer = styled.footer`\n  font-size: 14px;\n`;\n","import React from 'react';\nimport { Footer } from './CalendarFooter.styles';\n\nconst CalendarFooter = (): React.ReactElement => {\n  const name: string = 'Hyuno Choi';\n  const footerText: string = `${name} ⓒ ${new Date().getFullYear()}`;\n\n  return <Footer>{footerText}</Footer>;\n};\n\nexport default CalendarFooter;\n","import React from 'react';\nimport Controller from './components/Controller/Controller';\nimport WeekBar from './components/WeekBar/WeekBar';\nimport DateTemplate from './components/DateTemplate/DateTemplate';\nimport CalendarHeader from './components/CalendarHeader/CalendarHeader';\nimport CalendarFooter from './components/CalendarFooter/CalendarFooter';\n\nconst App = (): React.ReactElement => (\n  <>\n    <CalendarHeader />\n    <Controller />\n    <WeekBar />\n    <DateTemplate />\n    <CalendarFooter />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './reducer';\nimport { GlobalStyle } from './global-styles';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}