{"version":3,"sources":["reducer/dateReducer.ts","reducer/index.ts","global-styles.ts","actions/index.ts","components/ChangeButton/styles.ts","components/ChangeButton/ChangeButton.tsx","components/Container/styles.ts","components/Container/Container.tsx","components/Controller/Controller.tsx","components/WeekBar/styles.ts","components/WeekBar/WeekBar.tsx","modules/GetDateObj.ts","components/DateFactory/styles.ts","components/DateFactory/DateFactory.tsx","components/DateTemplate/styles.ts","components/DateTemplate/DateTemplate.tsx","components/CalendarHeader/Header.styles.ts","components/CalendarHeader/CalendarHeader.tsx","components/CalendarFooter/CalendarFooter.styles.ts","components/CalendarFooter/CalendarFooter.tsx","App.tsx","index.tsx"],"names":["date","Date","defaultDate","year","getFullYear","month","getMonth","getDate","rootReducer","combineReducers","state","action","type","reduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","CSSVariables","GlobalStyle","createGlobalStyle","reset","changeCalendar","btnName","Button","styled","button","ChangeButton","direction","dispatch","useDispatch","className","onClick","BtnContainer","div","props","marginBottom","Display","h2","fontSize","Container","useSelector","text","Controller","Week","ul","WeekBar","map","day","getLastMonthList","dateState","dateList","lastMonth","lastMonthContext","lastDate","getLastDateOfMonth","firstDayContext","i","getDay","unshift","getNextMonthList","lastDay","push","getCurrentMonthList","getDateObj","realDate","today","dateLists","DateLi","li","isgray","DateFactory","isGray","eachDate","index","DateUl","DateTemplate","Header","header","CalendarHeader","Footer","footer","CalendarFooter","footerText","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7984bbb9.chunk.js","sourcesContent":["const date: Date = new Date();\n\nexport interface IDefaultDate {\n  year: number;\n  month: number;\n  date: number;\n}\n\nconst defaultDate: IDefaultDate = {\n  year: date.getFullYear(),\n  month: date.getMonth(),\n  date: date.getDate(),\n};\n\ntype TDateReducer = (\n  state: IDefaultDate,\n  action: { type: string }\n) => IDefaultDate;\n\nexport const dateReducer: TDateReducer = (state = defaultDate, action) => {\n  switch (action.type) {\n    case \"INCREMENT-YEAR\":\n      return {\n        ...state,\n        year: state.year + 1,\n      };\n\n    case \"DECREMENT-YEAR\":\n      return {\n        ...state,\n        year: state.year === 0 ? 0 : state.year - 1,\n      };\n\n    case \"INCREMENT-MONTH\":\n      if (state.month === 11) {\n        return {\n          ...state,\n          month: 0,\n          year: state.year + 1,\n        };\n      } else {\n        return {\n          ...state,\n          month: state.month + 1,\n        };\n      }\n\n    case \"DECREMENT-MONTH\":\n      if (state.month === 0) {\n        return {\n          ...state,\n          month: 11,\n          year: state.year === 0 ? 0 : state.year - 1,\n        };\n      } else {\n        return {\n          ...state,\n          month: state.month - 1,\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers, createStore } from \"redux\";\nimport { dateReducer } from \"./dateReducer\";\n\nconst rootReducer = combineReducers({\n  date: dateReducer,\n});\n\nconst reduxDevTools =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__();\n\nconst store = createStore(rootReducer, reduxDevTools);\n\nexport default store;\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\ninterface ICSSVariables {\n  mainFontFamily: string;\n  titleFontFamily: string;\n  mainBackgroundColor: string;\n  mainFontColor: string;\n  pointSkyblueColor: string;\n  sundayRedColor: string;\n  notCurrentDateColor: string;\n}\n\nexport const CSSVariables: ICSSVariables = {\n  mainFontFamily: '\"Roboto\", sans-serif',\n  titleFontFamily: '\"Dancing Script\", cursive',\n  mainBackgroundColor: \"#0f111b\",\n  mainFontColor: \"white\",\n  pointSkyblueColor: \"#09cefc\",\n  sundayRedColor: \"#ee3b50\",\n  notCurrentDateColor: \"grey\",\n};\n\nexport const GlobalStyle = createGlobalStyle`\n  ${reset}\n\n  #root {\n    font-family: ${CSSVariables.mainFontFamily};\n    font-size: 25px;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color: ${CSSVariables.mainBackgroundColor};\n    color: ${CSSVariables.mainFontColor};\n  }\n\n  li:nth-child(7n + 1) {\n    color: ${CSSVariables.sundayRedColor};\n  }\n`;\n","type TchangeCalendar = (btnName: string) => { type: string };\n\nconst changeCalendar: TchangeCalendar = (btnName) => {\n  return { type: `${btnName}` };\n};\n\nexport default changeCalendar;\n","import styled from \"styled-components\";\nimport { CSSVariables } from \"../../global-styles\";\n\nconst Button = styled.button`\n  border: none;\n  border-radius: 10px;\n  background-color: transparent;\n  font-size: 30px;\n  color: ${CSSVariables.pointSkyblueColor};\n`;\n\nexport default Button;\n","import React, { ReactElement } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport changeCalendar from \"../../actions\";\nimport Button from \"./styles\";\n\ninterface IChangeButton {\n  type: string;\n  direction: string;\n}\n\nconst ChangeButton: React.FC<IChangeButton> = ({\n  type,\n  direction,\n}): ReactElement => {\n  const dispatch = useDispatch();\n  const className = `${direction}-${type}`;\n\n  return (\n    <Button\n      className={className}\n      onClick={(): void => {\n        dispatch(changeCalendar(className));\n      }}\n    >\n      {direction === \"DECREMENT\" ? \"<\" : \">\"}\n    </Button>\n  );\n};\n\nexport default ChangeButton;\n","import styled from \"styled-components\";\n\ninterface IBtnContainer {\n  marginBottom: number;\n}\n\nexport const BtnContainer = styled.div<IBtnContainer>`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: ${(props) => props.marginBottom}px;\n`;\n\ninterface IDisplay {\n  fontSize: number;\n}\n\nexport const Display = styled.h2<IDisplay>`\n  font-size: ${(props) => props.fontSize}px;\n`;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { IDefaultDate } from \"../../reducer/dateReducer\";\nimport ChangeButton from \"../ChangeButton/ChangeButton\";\nimport { BtnContainer, Display } from \"./styles\";\n\ninterface IContainer {\n  type: string;\n}\n\nconst Container: React.FC<IContainer> = ({ type }): React.ReactElement => {\n  const date = useSelector((state: { date: IDefaultDate }) => state.date);\n\n  const fontSize: number = type === \"YEAR\" ? 50 : 40;\n  const text: number = type === \"YEAR\" ? date.year : date.month + 1;\n  const marginBottom: number = type === \"YEAR\" ? 0 : 20;\n\n  return (\n    <BtnContainer marginBottom={marginBottom}>\n      <ChangeButton type={type} direction=\"DECREMENT\"></ChangeButton>\n      <Display fontSize={fontSize}>{text}</Display>\n      <ChangeButton type={type} direction=\"INCREMENT\"></ChangeButton>\n    </BtnContainer>\n  );\n};\n\nexport default Container;\n","import React from \"react\";\nimport Container from \"../Container/Container\";\n\nconst Controller: React.FC = (): React.ReactElement => {\n  return (\n    <>\n      <Container type=\"YEAR\"></Container>\n      <Container type=\"MONTH\"></Container>\n    </>\n  );\n};\n\nexport default Controller;\n","import styled from \"styled-components\";\nimport { CSSVariables } from \"../../global-styles\";\n\nconst Week = styled.ul`\n  margin-bottom: 30px;\n  color: ${CSSVariables.pointSkyblueColor};\n  display: grid;\n  grid-template-columns: repeat(7, minmax(90px, auto));\n  text-align: center;\n`;\n\nexport default Week;\n","import React, { ReactElement } from \"react\";\nimport Week from \"./styles\";\n\nconst WeekBar: React.FC = (): ReactElement => {\n  const days: string[] = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n  return (\n    <Week>\n      {days.map(\n        (day: string): React.ReactElement => (\n          <li key={day}>{day}</li>\n        )\n      )}\n    </Week>\n  );\n};\n\nexport default WeekBar;\n","import { IDefaultDate } from \"../reducer/dateReducer\";\r\n\r\nconst getLastMonthList: Function = (dateState: IDefaultDate): number[] => {\r\n  const month: number = dateState.month;\r\n  const lastMonth: number = month === 0 ? 11 : month - 1;\r\n\r\n  const lastMonthContext: IDefaultDate = {\r\n    ...dateState,\r\n    month: lastMonth,\r\n  };\r\n\r\n  const lastDate: number = getLastDateOfMonth(lastMonthContext);\r\n  let dateList: number[];\r\n  dateList = [];\r\n\r\n  const firstDayContext: IDefaultDate = {\r\n    ...dateState,\r\n    date: 1,\r\n  };\r\n\r\n  for (let i: number = 0; i < getDay(firstDayContext); i++) {\r\n    dateList.unshift(lastDate - i);\r\n  }\r\n\r\n  return dateList;\r\n};\r\n\r\nconst getNextMonthList = (dateState: IDefaultDate): number[] => {\r\n  const lastDate: number = getLastDateOfMonth(dateState);\r\n  dateState = {\r\n    ...dateState,\r\n    date: lastDate,\r\n  };\r\n\r\n  const lastDay: number = getDay(dateState);\r\n  let dateList: number[];\r\n  dateList = [];\r\n\r\n  for (let i: number = 1; i <= 6 - lastDay; i++) {\r\n    dateList.push(i);\r\n  }\r\n\r\n  return dateList;\r\n};\r\n\r\nconst getDay = (dateState: IDefaultDate): number => {\r\n  const { year, month, date }: IDefaultDate = dateState;\r\n  return new Date(year, month, date).getDay();\r\n};\r\n\r\nconst getCurrentMonthList = (dateState: IDefaultDate): number[] => {\r\n  let dateList: number[];\r\n  dateList = [];\r\n\r\n  for (let i: number = 1; i <= getLastDateOfMonth(dateState); i++) {\r\n    dateList.push(i);\r\n  }\r\n\r\n  return dateList;\r\n};\r\n\r\nconst getLastDateOfMonth = (dateState: IDefaultDate): number => {\r\n  const { year, month } = dateState;\r\n\r\n  return new Date(year, month + 1, 0).getDate(); // return last date of last month.\r\n};\r\n\r\nconst getDateObj: Function = (dateState: IDefaultDate) => {\r\n  const realDate: Date = new Date();\r\n  let today: number = -1;\r\n\r\n  if (\r\n    dateState.year === realDate.getFullYear() &&\r\n    dateState.month === realDate.getMonth()\r\n  ) {\r\n    today = dateState.date;\r\n  }\r\n\r\n  const dateLists: number[][] = [\r\n    getLastMonthList(dateState),\r\n    getCurrentMonthList(dateState),\r\n    getNextMonthList(dateState),\r\n  ];\r\n\r\n  return {\r\n    today,\r\n    dateLists,\r\n  };\r\n};\r\n\r\nexport default getDateObj;\r\n","import styled from \"styled-components\";\n\ninterface IDateLi {\n  today: string;\n  isgray: string;\n}\n\nconst DateLi = styled.li<IDateLi>`\n  color: ${(props) => props.today} !important;\n  color: ${(props) => props.isgray} !important;\n`;\n\nexport default DateLi;\n","import React, { ReactElement } from \"react\";\nimport { CSSVariables } from \"../../global-styles\";\nimport DateLi from \"./styles\";\n\ninterface IDateFactory {\n  dateList: number[];\n  today: number;\n  isGray: boolean;\n}\n\nconst DateFactory: React.FC<IDateFactory> = ({\n  dateList,\n  today,\n  isGray,\n}): ReactElement => {\n  return (\n    <>\n      {dateList.map(\n        (eachDate: number, index: number): React.ReactElement => (\n          <DateLi\n            key={index}\n            today={eachDate === today ? CSSVariables.pointSkyblueColor : \"\"}\n            isgray={isGray ? \"gray\" : \"\"}\n          >\n            {eachDate}\n          </DateLi>\n        )\n      )}\n    </>\n  );\n};\n\nexport default DateFactory;\n","import styled from \"styled-components\";\n\nconst DateUl = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(7, minmax(90px, auto));\n  grid-template-rows: repeat(6, minmax(60px, auto));\n  text-align: center;\n`;\n\nexport default DateUl;\n","import React, { ReactElement } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport getDateObj from \"../../modules/GetDateObj\";\nimport { IDefaultDate } from \"../../reducer/dateReducer\";\nimport DateFactory from \"../DateFactory/DateFactory\";\nimport DateUl from \"./styles\";\n\nconst DateTemplate: React.FC = (): ReactElement => {\n  const date = useSelector((store: { date: IDefaultDate }) => store.date);\n\n  interface IDateObj {\n    today: number;\n    dateLists: number[][];\n  }\n\n  const { today, dateLists }: IDateObj = getDateObj(date);\n\n  return (\n    <DateUl>\n      {dateLists.map(\n        (dateList: number[], index: number): React.ReactElement => (\n          <DateFactory\n            key={index}\n            dateList={dateList}\n            today={today}\n            isGray={index !== 1 ? true : false} // 0, 2 => last, next month. 1 = > current month.\n          ></DateFactory>\n        )\n      )}\n    </DateUl>\n  );\n};\n\nexport default DateTemplate;\n","import styled from \"styled-components\";\nimport { CSSVariables } from \"../../global-styles\";\n\nexport const Header = styled.header`\n  font-family: ${CSSVariables.titleFontFamily};\n  font-size: 70px;\n  margin-bottom: 40px;\n`;\n","import React from \"react\";\nimport { Header } from \"./Header.styles\";\n\nconst CalendarHeader: React.FC = (): React.ReactElement => {\n  const headerText: string = \"Simple Calendar\";\n\n  return <Header>{headerText}</Header>;\n};\n\nexport default CalendarHeader;\n","import styled from \"styled-components\";\n\nexport const Footer = styled.footer`\n  font-size: 14px;\n`;\n","import React from \"react\";\nimport { Footer } from \"./CalendarFooter.styles\";\n\nconst CalendarFooter: React.FC = (): React.ReactElement => {\n  const name: string = \"Hyuno Choi\";\n  const footerText: string = `${name} ⓒ ${new Date().getFullYear()}`;\n\n  return <Footer>{footerText}</Footer>;\n};\n\nexport default CalendarFooter;\n","import React from \"react\";\nimport Controller from \"./components/Controller/Controller\";\nimport WeekBar from \"./components/WeekBar/WeekBar\";\nimport DateTemplate from \"./components/DateTemplate/DateTemplate\";\nimport CalendarHeader from \"./components/CalendarHeader/CalendarHeader\";\nimport CalendarFooter from \"./components/CalendarFooter/CalendarFooter\";\n\nconst App: React.FC = (): React.ReactElement => {\n  return (\n    <>\n      <CalendarHeader></CalendarHeader>\n      <Controller></Controller>\n      <WeekBar></WeekBar>\n      <DateTemplate></DateTemplate>\n      <CalendarFooter></CalendarFooter>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./reducer\";\nimport { Provider } from \"react-redux\";\nimport { GlobalStyle } from \"./global-styles\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}