{"version":3,"sources":["context/DateContext.js","modules/DateChanger.js","components/ChangeButton.js","components/Container.js","components/Controller.js","components/WeekBar.js","modules/getDateList.js","components/DateFactory.js","components/DateTemplate.js","App.js","index.js"],"names":["newDate","Date","dateObj","year","getFullYear","month","getMonth","date","getDate","DateContext","React","createContext","DateChanger","event","context","newState","dateState","classList","target","contains","setDateState","Button","styled","button","ChangeButton","what","where","useContext","className","onClick","BtnContainer","div","props","marginBottom","Display","h2","fontSize","Container","text","Controller","Week","ul","WeekBar","map","day","index","getDateOfLastMonth","lastMonth","lastMonthContext","lastDate","getLastDateOfMonth","dateList","firstDayContext","i","getDay","unshift","getDateOfNextMonth","lastDay","push","getDateOfMonth","getDateObj","realDate","today","DateLi","li","isgray","DateFactory","isGray","eachDate","DateUl","DateTemplate","GlobalStyle","createGlobalStyle","reset","Header","header","Footer","footer","App","useState","Provider","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0eb21242.chunk.js","sourcesContent":["import React from \"react\";\n\nconst newDate = new Date();\n\nexport let dateObj = {\n  year: newDate.getFullYear(),\n  month: newDate.getMonth(),\n  date: newDate.getDate(),\n};\n\nexport const DateContext = React.createContext();\n","const DateChanger = (event, context) => {\n  const dateObj = context.dateState;\n  const {\n    target: { classList },\n  } = event;\n  let newState;\n\n  if (classList.contains(\"down-year-btn\")) {\n    newState = {\n      ...dateObj,\n      year: dateObj.year === 0 ? 0 : dateObj.year - 1,\n    };\n  }\n  if (classList.contains(\"up-year-btn\")) {\n    newState = {\n      ...dateObj,\n      year: dateObj.year + 1,\n    };\n  }\n  if (classList.contains(\"down-month-btn\")) {\n    if (dateObj.month === 0) {\n      newState = {\n        ...dateObj,\n        month: 11,\n        year: dateObj.year === 0 ? 0 : dateObj.year - 1,\n      };\n    } else {\n      newState = {\n        ...dateObj,\n        month: dateObj.month - 1,\n      };\n    }\n  }\n  if (classList.contains(\"up-month-btn\")) {\n    if (dateObj.month === 11) {\n      newState = {\n        ...dateObj,\n        month: 0,\n        year: dateObj.year + 1,\n      };\n    } else {\n      newState = {\n        ...dateObj,\n        month: dateObj.month + 1,\n      };\n    }\n  }\n  context.setDateState(newState);\n};\n\nexport default DateChanger;\n","import React, { useContext } from \"react\";\nimport { DateContext } from \"../context/DateContext.js\";\nimport DateChanger from \"../modules/DateChanger.js\";\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n  border: none;\n  border-radius: 10px;\n  background-color: transparent;\n  font-size: 30px;\n  color: var(--point-skyblue-color);\n`;\n\nconst ChangeButton = ({ what, where }) => {\n  const context = useContext(DateContext);\n\n  return (\n    <Button\n      className={`${where}-${what}-btn`}\n      onClick={(event) => {\n        DateChanger(event, context);\n      }}\n    >\n      {where === \"down\" ? \"<\" : \">\"}\n    </Button>\n  );\n};\n\nexport default ChangeButton;\n","import React from \"react\";\nimport { useContext } from \"react\";\nimport { DateContext } from \"../context/DateContext.js\";\nimport ChangeButton from \"./ChangeButton.js\";\nimport styled from \"styled-components\";\n\nconst BtnContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: ${(props) => props.marginBottom}px;\n`;\n\nconst Display = styled.h2`\n  font-size: ${(props) => props.fontSize}px;\n`;\n\nconst Container = ({ what }) => {\n  const dateObj = useContext(DateContext).dateState;\n  const fontSize = what === \"year\" ? 50 : 40;\n  const text = what === \"year\" ? dateObj.year : dateObj.month + 1;\n  const marginBottom = what === \"year\" ? 0 : 20;\n\n  return (\n    <BtnContainer marginBottom={marginBottom}>\n      <ChangeButton what={what} where=\"down\"></ChangeButton>\n      <Display fontSize={fontSize}>{text}</Display>\n      <ChangeButton what={what} where=\"up\"></ChangeButton>\n    </BtnContainer>\n  );\n};\n\nexport default Container;\n","import React from \"react\";\nimport Container from \"./Container.js\";\n\nconst Controller = () => {\n  return (\n    <>\n      <Container what=\"year\"></Container>\n      <Container what=\"month\"></Container>\n    </>\n  );\n};\n\nexport default Controller;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Week = styled.ul`\n  margin-bottom: 30px;\n  color: var(--point-skyblue-color);\n  display: grid;\n  grid-template-columns: repeat(7, minmax(90px, auto));\n  text-align: center;\n`;\n\nconst WeekBar = () => {\n  const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n  return (\n    <Week>\n      {days.map((day, index) => (\n        <li key={index}>{day}</li>\n      ))}\n    </Week>\n  );\n};\n\nexport default WeekBar;\n","const getDateOfLastMonth = (DateContext) => {\r\n  const month = DateContext.month;\r\n  const lastMonth = month === 0 ? 11 : month - 1;\r\n\r\n  const lastMonthContext = {\r\n    ...DateContext,\r\n    month: lastMonth,\r\n  };\r\n\r\n  const lastDate = getLastDateOfMonth(lastMonthContext);\r\n  let dateList = [];\r\n\r\n  const firstDayContext = {\r\n    ...DateContext,\r\n    date: 1,\r\n  };\r\n\r\n  for (let i = 0; i < getDay(firstDayContext); i++) {\r\n    dateList.unshift(lastDate - i);\r\n  }\r\n\r\n  return dateList;\r\n};\r\n\r\nconst getDateOfNextMonth = (DateContext) => {\r\n  const lastDate = getLastDateOfMonth(DateContext);\r\n  DateContext = {\r\n    ...DateContext,\r\n    date: lastDate,\r\n  };\r\n\r\n  const lastDay = getDay(DateContext);\r\n  let dateList = [];\r\n\r\n  for (let i = 1; i <= 6 - lastDay; i++) {\r\n    dateList.push(i);\r\n  }\r\n\r\n  return dateList;\r\n};\r\n\r\nconst getDay = (DateContext) => {\r\n  const { year, month, date } = DateContext;\r\n  return new Date(year, month, date).getDay();\r\n};\r\n\r\nconst getDateOfMonth = (DateContext) => {\r\n  const dateList = [];\r\n\r\n  for (let i = 1; i <= getLastDateOfMonth(DateContext); i++) {\r\n    dateList.push(i);\r\n  }\r\n\r\n  return dateList;\r\n};\r\n\r\nconst getLastDateOfMonth = (DateContext) => {\r\n  let { year, month } = DateContext;\r\n\r\n  return new Date(year, month + 1, 0).getDate(); // return last date of last month.\r\n};\r\n\r\nconst getDateObj = (DateContext) => {\r\n  const realDate = new Date();\r\n  let today = null;\r\n\r\n  if (\r\n    DateContext.year === realDate.getFullYear() &&\r\n    DateContext.month === realDate.getMonth()\r\n  ) {\r\n    today = DateContext.date;\r\n  }\r\n\r\n  const dateList = [\r\n    getDateOfLastMonth(DateContext),\r\n    getDateOfMonth(DateContext),\r\n    getDateOfNextMonth(DateContext),\r\n  ];\r\n\r\n  return {\r\n    today,\r\n    dateList,\r\n  };\r\n};\r\n\r\nexport default getDateObj;\r\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst DateLi = styled.li`\n  color: ${(props) => props.today} !important;\n  color: ${(props) => props.isgray} !important;\n`;\n\nconst DateFactory = ({ date, today, isGray }) => {\n  return date.map((eachDate, index) => (\n    <DateLi\n      key={index}\n      today={eachDate === today ? \"var(--point-skyblue-color)\" : \"\"}\n      isgray={isGray && \"gray\"}\n    >\n      {eachDate}\n    </DateLi>\n  ));\n};\n\nexport default DateFactory;\n","import React, { useContext } from \"react\";\nimport { DateContext } from \"../context/DateContext.js\";\nimport getDateObj from \"../modules/getDateList.js\";\nimport DateFactory from \"./DateFactory.js\";\nimport styled from \"styled-components\";\n\nconst DateUl = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(7, minmax(90px, auto));\n  grid-template-rows: repeat(6, minmax(60px, auto));\n  text-align: center;\n`;\n\nconst DateTemplate = () => {\n  const context = useContext(DateContext);\n  const { today, dateList } = getDateObj(context.dateState);\n\n  return (\n    <DateUl>\n      {dateList.map((date, index) => (\n        <DateFactory\n          key={index}\n          date={date}\n          today={today}\n          isGray={index !== 1 ? true : false} // 0, 2 => last, next month. 1 = > current month.\n        ></DateFactory>\n      ))}\n    </DateUl>\n  );\n};\n\nexport default DateTemplate;\n","import React, { useState } from \"react\";\nimport Controller from \"./components/Controller.js\";\nimport WeekBar from \"./components/WeekBar.js\";\nimport DateTemplate from \"./components/DateTemplate.js\";\nimport { DateContext, dateObj } from \"./context/DateContext.js\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n  :root {\n    --main-font-family: \"Roboto\", sans-serif;\n    --title-font-family: \"Dancing Script\", cursive;\n    --main-background-color: #0f111b;\n    --main-font-color: white;\n    --point-skyblue-color: #09cefc;\n    --sunday-red-color: #ee3b50;\n    --not-current-date-color: grey;\n  }\n\n  #root {\n    font-family: var(--main-font-family);\n    font-size: 25px;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color: var(--main-background-color);\n    color: var(--main-font-color);\n  }\n\n  li:nth-child(7n + 1) {\n    color: var(--sunday-red-color);\n  }\n`;\n\nconst Header = styled.header`\n  font-family: var(--title-font-family);\n  font-size: 70px;\n  margin-bottom: 40px;\n`;\n\nconst Footer = styled.footer`\n  font-size: 14px;\n`;\n\nconst App = () => {\n  const [dateState, setDateState] = useState(dateObj);\n\n  return (\n    <>\n      <GlobalStyle />\n      <Header>Simple Calendar</Header>\n      <DateContext.Provider value={{ dateState, setDateState }}>\n        <Controller></Controller>\n        <WeekBar></WeekBar>\n        <DateTemplate></DateTemplate>\n      </DateContext.Provider>\n      <Footer>Hyuno Choi ⓒ {new Date().getFullYear()}</Footer>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}